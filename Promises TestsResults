> jest promises.spec.js

  console.log
    3

      at ../O.Babii/FrontEnd/JavaScript/Promises/script.js:7:31

  console.log
    Boo

      at ../O.Babii/FrontEnd/JavaScript/Promises/script.js:16:29

  console.log
    Resolved

      at ../O.Babii/FrontEnd/JavaScript/Promises/script.js:26:31

  console.log
    Rejected

      at ../O.Babii/FrontEnd/JavaScript/Promises/script.js:27:29

 FAIL  ./promises.spec.js
  Promises
    Promises
      ✕ makePromiseResolveWith3 should create Promise with resolved number 3  (19 ms)
      ✕ makePromiseRejectWithBoo should create Promise with rejected string "Boo"  (5 ms)
      ✕ makeDelayPromise should returns Promise resolved with a provided value after the provided delay (1006 ms)
      makePromiseWithConstructor should return a Promise
        ✓ should resolves if "itShouldResolve" is true  (1 ms)
        ✕ should rejects if "itShouldResolve" is false  (2 ms)
      waitForPromise should call an action after the promise completion
        ✕ if promise resolves (2 ms)
        ✕ if promise rejects (1 ms)
      consumePromise should call a consumer with handled value after the promise completion
        ✓ resolved value should be handled by handler before passed to consumer (2 ms)
        ✕ rejected value should be handled by handler before passed to consumer (2 ms)

  ● Promises › Promises › makePromiseResolveWith3 should create Promise with resolved number 3

    expect(received).toEqual(expected) // deep equality

    Expected: 3
    Received: undefined

      14 |     it('makePromiseResolveWith3 should create Promise with resolved number 3 ', () => {
      15 |       return items['makePromiseResolveWith3']().then(result => {
    > 16 |         expect(result).toEqual(3);
         |                        ^
      17 |       })
      18 |     });
      19 |     it('makePromiseRejectWithBoo should create Promise with rejected string "Boo" ', () => {

      at promises.spec.js:16:24

  ● Promises › Promises › makePromiseRejectWithBoo should create Promise with rejected string "Boo"

    TypeError: Cannot read property 'catch' of undefined

      18 |     });
      19 |     it('makePromiseRejectWithBoo should create Promise with rejected string "Boo" ', () => {
    > 20 |       return items['makePromiseRejectWithBoo']().catch(result => {
         |              ^
      21 |         expect(result).toEqual('Boo!');
      22 |       })
      23 |     });

      at Object.<anonymous> (promises.spec.js:20:14)

  ● Promises › Promises › makePromiseWithConstructor should return a Promise  › should rejects if "itShouldResolve" is false

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      38 |         .catch(mockReject);
      39 |
    > 40 |         expect(mockReject).toHaveBeenCalled();
         |                            ^
      41 |       })
      42 |     });
      43 |

      at Object.<anonymous> (promises.spec.js:40:28)

  ● Promises › Promises › makeDelayPromise should returns Promise resolved with a provided value after the provided delay

    expect(received).toEqual(expected) // deep equality

    Expected: 3000
    Received: undefined

      47 |       await items['makeDelayPromise'](t, t).then(result => {
      48 |         const end = new Date();
    > 49 |         expect(result).toEqual(t);
         |                        ^
      50 |         expect((end - start) >= t).toBeTruthy();
      51 |       });
      52 |     });

      at promises.spec.js:49:24
      at Object.<anonymous> (promises.spec.js:47:7)

  ● Promises › Promises › waitForPromise should call an action after the promise completion › if promise resolves

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      56 |         const action = jest.fn();
      57 |         await items['waitForPromise'](items['makePromiseWithConstructor'](true), action);
    > 58 |         expect(action).toHaveBeenCalled();
         |                        ^
      59 |       });
      60 |       it('if promise rejects', async () => {
      61 |         const action = jest.fn();

      at Object.<anonymous> (promises.spec.js:58:24)

  ● Promises › Promises › waitForPromise should call an action after the promise completion › if promise rejects

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      61 |         const action = jest.fn();
      62 |         await items['waitForPromise'](items['makePromiseWithConstructor'](false), action);
    > 63 |         expect(action).toHaveBeenCalled();
         |                        ^
      64 |       });
      65 |     });
      66 |

      at Object.<anonymous> (promises.spec.js:63:24)

  ● Promises › Promises › consumePromise should call a consumer with handled value after the promise completion › rejected value should be handled by handler before passed to consumer

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      82 |
      83 |         await items['consumePromise'](Promise.reject(), mockConsumer, mockHandler);
    > 84 |         expect(mockHandler).toHaveBeenCalled();
         |                             ^
      85 |         expect(mockConsumer).toHaveBeenCalledWith('handled');
      86 |       })
      87 |     });

      at Object.<anonymous> (promises.spec.js:84:29)

Test Suites: 1 failed, 1 total
Tests:       7 failed, 2 passed, 9 total
Snapshots:   0 total
Time:        2.39 s
Ran all test suites matching /promises.spec.js/i.
  console.log
    Resolved value

      at ../O.Babii/FrontEnd/JavaScript/Promises/script.js:38:28

  console.log
    Resolved

      at ../O.Babii/FrontEnd/JavaScript/Promises/script.js:26:31

  console.log
    Rejected

      at ../O.Babii/FrontEnd/JavaScript/Promises/script.js:27:29

  console.log
    undefined

      at ../O.Babii/FrontEnd/JavaScript/Promises/script.js:56:76

npm ERR! Test failed.  See above for more details.
